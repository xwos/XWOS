--[[--------
XWLUA模块：信号选择器

信号选择器类似于事件标志，使用位图来管理一组**同步对象**。使得单一线程可以同时等待一组不同的**同步对象**。

每个**同步对象**在信号选择器位图中都绑定一个特定的**位**，
当这些**同步对象**发送**选择信号**时，信号选择器位图中特定的**位**被设置，同时使得等待信号选择器的线程被唤醒。

**发送信号**对于不同的**同步对象**有不同解释：

+ 信号量：指发布操作 `semsp:post`() ；
+ 条件量：指广播操作 `condsp:broadcast`() ，单播 `condsp:unicast`() 不会向信号选择器发送**选择信号**；
+ 事件标志：指事件标志位图中任何一位发生改变：
  + `flgsp:s1m`()
  + `flgsp:s1i`()
  + `flgsp:c0m`()
  + `flgsp:c0i`()
  + `flgsp:x1m`()
  + `flgsp:x1i`()
+ 线程栅栏：指所有线程抵达栅栏调用 `brsp:sync`() ；
+ 信号选择器：信号选择器本身也是同步对象，当任何绑定在信号选择器中的**同步对象**向信号选择器发送了**选择信号**，信号选择器亦会向其父信号选择器发送**选择信号**。
  信号选择器之间可以依次绑定，形成传递链。但要注意，信号选择器不可相互绑定形成循环链，否则会造成无限传递。


@module xwos.sync.sel
]]

--[[--------
新建信号选择器<br>
<br>

@tparam number num (**in**) 信号槽的数量<br>
<br>

@treturn userdata 新的信号选择器对象的强指针 `selsp`

@usage
sel = xwos.sel.new(32) -- 创建拥有32个槽的信号选择器
]]
function new(num)
end
